
package net.spotifei.Views.Panels.Admin;

//imports
import net.spotifei.Controller.AdminController;
import net.spotifei.Infrastructure.Container.AppContext;
import net.spotifei.Infrastructure.Factories.MusicInfoComponent.MusicInfoPanelBuilder;
import net.spotifei.Views.Components.MusicListComponent;
import net.spotifei.Views.MainFrame;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.ArrayList;

/**
 *
 * @author fengl
 * */
public class ADMDelMusicPanel extends javax.swing.JPanel {

    private final MainFrame mainframe;
    private final AppContext appContext;
    private MusicListComponent musicListComponent;
    private final AdminController adminController;
    private SwingWorker<Void, Void> updaterWorker;

    /**
     * Construtor da classe `ADMDelMusicPanel`.
     *
     * @param mainframe A instância da janela principal.
     * @param appContext O contexto da aplicação.
     */
    public ADMDelMusicPanel(MainFrame mainframe, AppContext appContext) {
        this.mainframe = mainframe;
        this.appContext = appContext;
        this.adminController = appContext.getAdminController(this);
        initComponents();
        addShowListeners();
    }

    // Métodos Getters e Setters para os componentes visuais.
    public JButton getBt_excluir() {
        return bt_excluir;
    }

    public void setBt_excluir(JButton bt_excluir) {
        this.bt_excluir = bt_excluir;
    }

    public JButton getBt_voltar() {
        return bt_voltar;
    }

    public void setBt_voltar(JButton bt_voltar) {
        this.bt_voltar = bt_voltar;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public void setjLabel1(JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public void setjLabel2(JLabel jLabel2) {
        this.jLabel2 = jLabel2;
    }

    public JLabel getjLabel3() {
        return jLabel3;
    }

    public void setjLabel3(JLabel jLabel3) {
        this.jLabel3 = jLabel3;
    }

    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    public void setjScrollPane1(JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }


    public JTextField getTxt_id_musicadel() {
        return txt_id_musicadel;
    }

    public void setTxt_id_musicadel(JTextField txt_id_musicadel) {
        this.txt_id_musicadel = txt_id_musicadel;
    }

    public AppContext getAppContext() {
        return appContext;
    }

    public MusicListComponent getMusicListComponent() {
        return musicListComponent;
    }

    public void setMusicListComponent(MusicListComponent musicListComponent) {
        this.musicListComponent = musicListComponent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents

    /**
     * Método privado para inicializar e configurar os componentes visuais do painel.
     */
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_id_musicadel = new javax.swing.JTextField();
        bt_excluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bt_voltar = new javax.swing.JButton();


        setBackground(new java.awt.Color(35, 35, 35));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(250, 250, 250));
        jLabel1.setText("EXCLUIR MÚSICA");
        jLabel1.setAlignmentX(CENTER_ALIGNMENT);

        MusicInfoPanelBuilder musicInfoPanelBuilder = new MusicInfoPanelBuilder(appContext, mainframe);
        musicInfoPanelBuilder.selectMusicInfoFromDeletePanel();

        musicListComponent = new MusicListComponent(musicInfoPanelBuilder);
        musicListComponent.setMusics(new ArrayList<>());
        musicListComponent.setMaximumSize(new Dimension(700, 400));
        musicListComponent.setMinimumSize(new Dimension(700, 400));
        musicListComponent.setPreferredSize(new Dimension(700,400));
        musicListComponent.setAlignmentX(CENTER_ALIGNMENT);
        musicListComponent.renderMusics();

        bt_voltar.setBackground(new java.awt.Color(0, 0, 0));
        bt_voltar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        bt_voltar.setForeground(new java.awt.Color(250, 250, 250));
        bt_voltar.setText("VOLTAR");
        bt_voltar.setAlignmentX(CENTER_ALIGNMENT);
        bt_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_voltarActionPerformed(evt);
            }
        });

        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        setAlignmentX(CENTER_ALIGNMENT);

        add(Box.createVerticalGlue());
        add(jLabel1);
        add(Box.createVerticalStrut(10));
        add(musicListComponent);
        add(Box.createVerticalStrut(30));
        add(bt_voltar);
        add(Box.createVerticalGlue());

    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método acionado pelo botão "VOLTAR".
     *
     * @param evt O evento de ação.
     */
    private void bt_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_voltarActionPerformed
        // TODO add your handling code here:
        mainframe.setPanel(MainFrame.ADMHOME_PANEL);
    }//GEN-LAST:event_bt_voltarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_excluir;
    private javax.swing.JButton bt_voltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_id_musicadel;
    // End of variables declaration//GEN-END:variables

    /**
     * Inicia um `SwingWorker` para carregar e atualizar a lista de músicas em segundo plano.
     */
    private void startMusicUpdateWorker(){
        updaterWorker = new SwingWorker<>() {
            @Override
            protected Void doInBackground(){
                try{
                    while(true){
                        adminController.loadAllMusicsForDelete();
                        Thread.sleep(1500);
                    }
                } catch (InterruptedException e){
                    return null;
                }
            }
        };
        updaterWorker.execute();
    }

    /**
     * Adiciona `ComponentListener`s ao painel para iniciar e parar o `SwingWorker`.
     */
    private void addShowListeners(){
        this.addComponentListener(new ComponentAdapter() {

            @Override
            public void componentShown(ComponentEvent e) {
                startMusicUpdateWorker();
                super.componentShown(e);
            }

            @Override
            public void componentHidden(ComponentEvent e) {
                if (updaterWorker == null) return;
                updaterWorker.cancel(true);
                super.componentHidden(e);
            }
        });
    }

    /**
     * Getter para a instância do `MainFrame`.
     *
     * @return A instância do `MainFrame`.
     */
    public MainFrame getMainframe() {
        return mainframe;
    }

}
